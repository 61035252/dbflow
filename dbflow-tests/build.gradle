apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'kotlin-kapt'

android {

    useLibrary 'org.apache.http.legacy'

    compileSdkVersion target_sdk

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion min_sdk_rx
        targetSdkVersion target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    kapt project("${dbflow_project_prefix}dbflow-processor")
    implementation project(':dbflow')
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation project("${dbflow_project_prefix}dbflow")
    implementation project("${dbflow_project_prefix}dbflow-sqlcipher")
    implementation project("${dbflow_project_prefix}dbflow-rx")
    implementation project("${dbflow_project_prefix}dbflow-rx2")
    implementation project("${dbflow_project_prefix}dbflow-coroutines")
    implementation project("${dbflow_project_prefix}dbflow-paging")

    kaptTest project("${dbflow_project_prefix}dbflow-processor")
    kaptAndroidTest project("${dbflow_project_prefix}dbflow-processor")

    testImplementation deps.javax_annotation

    testImplementation deps.junit
    testImplementation "org.robolectric:robolectric:3.5.1"
    testImplementation("com.nhaarman:mockito-kotlin:1.5.0") {
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation 'org.mockito:mockito-core:2.8.9'

    androidTestImplementation deps.junit
    androidTestImplementation('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test:rules:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

android.applicationVariants.all { variant ->
    String taskName = "copy${variant.name.capitalize()}ResDirectoryToClasses"
    task(taskName, type: Copy) {
        from "${projectDir}/src/test/res"
        into "${buildDir}/intermediates/classes/test/${variant.buildType.name}/res"

        from "${projectDir}/src/test/assets"
        into "${buildDir}/intermediates/classes/test/${variant.buildType.name}/assets"
    }
    project.getTasksByName("generate${variant.name.capitalize()}Resources", false)[0].dependsOn(taskName)
}

dexcount {
    includeClasses = true
    orderByMethodCount = true
}
kotlin {
    experimental {
        coroutines "enable"
    }
}